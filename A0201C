#include <cmath>
#include <iostream>
#include <vector>

void AmountFlights(int height, int amount) {
  amount = std::min(amount, static_cast<int>(log2(height)) + 2);
  std::vector<std::vector<int>> dp(amount + 1, std::vector<int>(height + 1));
  for (int i = 0; i < amount + 1; ++i) {
    dp[i][0] = 0;
  }
  for (int j = 0; j < height + 1; ++j) {
    dp[0][j] = 0;
  }
  for (int i = 1; i < amount + 1; ++i) {
    for (int j = 1; j < height + 1; ++j) {
      dp[i][j] = dp[i - 1][j - 1] + dp[i][j - 1] + 1;
      // std::cout << dp[i][j] << ' ';
    }
    // std::cout << '\n';
  }
  if (amount == 0 && height > 1) {
    std::cout << -1;
  } else {
    int answer = 0;
    while (dp[amount][answer] + 1 < height) {
      ++answer;
    }
    std::cout << answer;
  }
}

int main() {
  int height = 0;
  int amount = 0;
  std::cin >> height >> amount;
  AmountFlights(height, amount);
}
